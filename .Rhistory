X <- cbind(rep(1, n), ` `=x)
A <- solve(t(X) %*% X) %*% t(X)
A %*% y
t(X) %*% y
t(X) %*% X
t(X) %*% X / (n-1)
cov(X)
var(x)
solve(t(X) %*% X) %*% t(X)
A <- solve(t(X) %*% X) %*% t(X)
A %*% y
t(X) %*% y
t(X) %*% X
for (i in 1:nrow(A)) {
for (j in 1:ncol(y)) {
print(A[i,  ] * y[, j])
}
}
d <- c(
rep(1, 10),
rep(-1, 10),
rep(0, 80)
)
d
prop.table(table(d))
p <- prop.table(table(d))
table(d)
table(d) * p
sum(table(d) * )
mean(d)
sum(table(d) * p)
p
table(p)
sum(c(-1, 0, 1) * p)
E <- sum(c(-1, 0, 1) * p)
x <- unique(d)
x
x <- sort(unique(d))
x
E <- sum(x * p)
sum(x^2*p) - E^2
var(d)
sum((d - mean(d))^2)
sum((d - mean(d))^2)/20
sum((d - mean(d))^2)/100
?var
knitr::opts_chunk$set(echo = TRUE)
0.62^2
library(dplyr)
library(ggplot2)
library(performance)
happy <- read.csv("rel_med.csv") %>%
as_tibble() %>%
# filter(!is.na(panas_negative), !is.na(lifetime_practice_cm), !is.na(eops)) %>%
mutate(sex = as.factor(sex),
disease = ifelse(disease == 2, 1, 0))
glimpse(happy)
fit1 <- lm(panas_negative ~ age, data = happy)
summary(fit1)
fit2 <- lm(panas_negative ~ age + lifetime_practice_cm, data = happy)
summary(fit2)
fit3 <- lm(panas_negative ~ eops + age + lifetime_practice_cm, data = happy)
summary(fit3)
compare_performance(fit1, fit2, fit3)
fit2 <- lm(panas_negative ~ age + lifetime_practice_prayer, data = happy)
summary(fit2)
fit3 <- lm(panas_negative ~ eops + age + lifetime_practice_prayer, data = happy)
summary(fit3)
fit4 <- glm((disease) ~ age + phi + lifetime_practice_prayer, data = happy)
summary(fit4)
exp(coef(fit4))
happy$age
happy$age |> hist()
source('~/.active-rstudio-document', echo=TRUE)
library(rstanarm)
rstanarm::radon
d <- rstanarm::radon
library(arm)
library(lme4)
sim
library(dplyr)
d %>% as_tibble()
fit <- lm(log_radon ~ floor, data = d %>% filter(county == "ANOKA"))
ft
fit
?sim
sim(fit, 10)
sim(fit, 10) %>% class()
dsub <- d %>% filter(county == "ANOKA")
fit <- lm(log_radon ~ floor, data = dsub)
install.packages('abtest')
?abtest::elicit_prior
prior_par <- elicit_prior(q = c(0.1, 0.3, 0.5),
prob = c(.025, .5, .975),
what = "arisk")
print(prior_par)
library(abtest)
library(abtest)prior_par <- elicit_prior(q = c(0.1, 0.3, 0.5),
prob = c(.025, .5, .975),
what = "arisk")
print(prior_par)
library(dplyr)
library(lme4)
library(lmerTest)
library(rjags)
library(brms)
library(cmdstanr)
library(ggplot2)
# we recommend running this is a fresh R session or restarting your current session
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
cmdstanr::install_cmdstan()
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE)
cmdstanr::install_cmdstan()
library(dplyr)
library(lme4)
library(lmerTest)
library(rjags)
library(brms)
library(cmdstanr)
library(ggplot2)
df <- read.delim("C:/Users/josue/Downloads/ramey/Primary data - by trial.txt", sep = "", header = TRUE) %>%
as_tibble() %>%
mutate_at(vars(sbj, phase, image), as.factor) %>%
janitor::clean_names() %>%
# trials capped at 20s
filter(rt < 20000,
phase == "test")
anal_data <-
df %>%
mutate(old_or_new = ifelse(npres == 0, "new", "old"),
old_or_new = as.factor(old_or_new),
sbj = factor(as.numeric(sbj))) %>%
select(sbj, scanratio, old_or_new) %>%
na.omit() %>%
tibble::rowid_to_column()
fit <- lmer(scanratio ~ old_or_new + (old_or_new|sbj), data = anal_data)
summary(fit)
train <-
anal_data %>%
group_by(sbj, old_or_new) %>%
slice_sample(prop = 0.9) %>%
ungroup()
train_id <- train$rowid
test <- anal_data[-train_id, ]
brms_fit <- brm(scanratio ~ old_or_new + (old_or_new|sbj),
data = train,
backend = "cmdstanr")
predict(brms_fit, test) %>% cbind(test)
a <- fixef(brms_fit)[1, ]
b <- fixef(brms_fit)[2, ]
ra <- ranef(brms_fit)$sbj[,,1]
rb <- ranef(brms_fit)$sbj[,,2]
new <- a[1] + ra[, 1]
old <- a[1] + ra[, 1] + (b[1] + rb[, 2])
r <- data.frame(sbj = factor(1:23), new, old) %>%
tidyr::pivot_longer(new:old,
names_to = "old_or_new",
values_to = "pred_scanratio")
posterior_linpred(brms_fit)
posterior_linpred(brms_fit) %>% str()
posterior_epred(brms_fit) %>% str()
new
fixef(brms_fit)[1, ]
ranef(brms_fit)$sbj[,,1]
new
head(train)
posterior_epred(brms_fit, newdata = head(train)) %>% str()
posterior_epred(brms_fit, newdata = head(train)) %>% colMeans()
new
posterior_epred(brms_fit, newdata = head(train, n = 10)) %>% colMeans()
head(train, n = 10)
train %>%
r <- data.frame(sbj = factor(1:23), new, old) %>%
tidyr::pivot_longer(new:old,
names_to = "old_or_new",
values_to = "pred_scanratio")
rain %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
filter(sbj == 5)
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
filter(sbj == 5)
r
new
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
summarize(m = mean(scanratio),
m2 = mean(pred_scanratio))
train %>%
left_join(r, by = c("sbj", "old_or_new"))
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, scanratio)) +
geom_jitter() +
facet_wrap(~ sbj) +
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, scanratio)) +
geom_jitter() +
geom_line(aes(y = pred_scanratio)) +
facet_wrap(~ sbj)
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, scanratio)) +
# geom_jitter() +
geom_line(aes(y = pred_scanratio)) +
facet_wrap(~ sbj)
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new)) +
# geom_jitter() +
geom_line(aes(y = pred_scanratio)) +
facet_wrap(~ sbj)
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_line()
train %>%
left_join(r, by = c("sbj", "old_or_new"))
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_line()
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_line() +
facet_wrap(~ sbj)
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_point() +
facet_wrap(~ sbj)
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_line(aes(group = sbj)) +
facet_wrap(~ sbj)
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_point(aes(y = scanratio)) +
geom_line(aes(group = sbj)) +
facet_wrap(~ sbj)
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_jitter(aes(y = scanratio)) +
geom_line(aes(group = sbj)) +
facet_wrap(~ sbj) +
theme_minimal()
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_jitter(aes(y = scanratio)) +
geom_line(aes(group = sbj), col = sbj) +
facet_wrap(~ sbj) +
theme_minimal()
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_jitter(aes(y = scanratio)) +
geom_line(aes(group = sbj, col = sbj)) +
facet_wrap(~ sbj) +
theme_minimal()
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_jitter(aes(y = scanratio)) +
geom_line(aes(group = sbj, col = sbj), show.legend = FALSE) +
facet_wrap(~ sbj) +
theme_minimal()
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
# summarize(m = mean(scanratio),
#           m2 = mean(pred_scanratio))
# group_by(sbj) %>%
# mutate(m = ifelse(old_or_new == "old", old, new))
ggplot(aes(old_or_new, pred_scanratio)) +
geom_jitter(aes(y = scanratio), width = 0.2) +
geom_line(aes(group = sbj, col = sbj), show.legend = FALSE, size = 2) +
facet_wrap(~ sbj) +
theme_minimal()
train %>%
left_join(r, by = c("sbj", "old_or_new")) %>%
distinct(pred_scanratio)
summary(brms_fit)
new
hist(new)
data_list <- list(
y = train$scanratio,
id = train$sbj,
N = nrow(train),
J = length(unique(train$sbj)),
X = model.matrix(y ~ train$old_or_new, data = train)
)
data_list <- list(
y = train$scanratio,
id = train$sbj,
N = nrow(train),
J = length(unique(train$sbj)),
X = model.matrix(y ~ train$old_or_new, data = train)
)
data_list <- list(
y = train$scanratio,
id = train$sbj,
N = nrow(train),
J = length(unique(train$sbj)),
X = model.matrix(scanratio ~ train$old_or_new, data = train)
)
data_list$X
data_list <- list(
y = train$scanratio,
id = train$sbj,
N = nrow(train),
J = length(unique(train$sbj)),
X = model.matrix(scanratio ~ old_or_new, data = train)
)
data_list$X
data1 <- read.csv("https://raw.githubusercontent.com/robertmbond/robertmbond.github.io/master/Comm6661files/alcohol.csv")
library(dplyr)
data1 <- readr::read_csv("https://raw.githubusercontent.com/robertmbond/robertmbond.github.io/master/Comm6661files/alcohol.csv")
data1
apply(data1, 2, function(x) sum(is.na(x)))
data2 <- na.omit(data1)
data2$drunk <- as.factor(data2$drunk)
t.test(motor ~ drunk, data = data2)
t.test(motor ~ drunk, data = data2, alternative = "less")
tribble(
~ participant, ~ left, ~ right,
1, 1, 7,
2, 6, 8,
3, 6, 4,
4, 7, 12,
5, 8, 14,
6, 10, 9,
7, 12, 5,
8, 5, 7,
9, 2, 4,
10, 6, 6,
11, 9, 3,
12, 11, 10,
13, 4, 12,
14, 2, 15,
15, 7, 6,
16, 6, 2,
17, 1, 7,
18, 9, 7,
19, 10, 8,
20, 6, 5
)
data2 <- tribble(
~ participant, ~ left, ~ right,
1, 1, 7,
2, 6, 8,
3, 6, 4,
4, 7, 12,
5, 8, 14,
6, 10, 9,
7, 12, 5,
8, 5, 7,
9, 2, 4,
10, 6, 6,
11, 9, 3,
12, 11, 10,
13, 4, 12,
14, 2, 15,
15, 7, 6,
16, 6, 2,
17, 1, 7,
18, 9, 7,
19, 10, 8,
20, 6, 5
)
data2 %>%
mutate(diff = left - right)
data2 %>%
mutate(diff = left - right) -> data3
data2 <-   mutate(data2, diff = left - right)
t.test(data2$diff, mu = 0)
data2 %>%
tidyr::pivot_longer(left:right,
names_to = "group",
values_to = "diff")
data2
data2 %>%
select(-diff) %>%
tidyr::pivot_longer(left:right,
names_to = "group",
values_to = "diff")
data2 %>%
select(-diff) %>%
tidyr::pivot_longer(left:right,
names_to = "group",
values_to = "diff") %>%
t.test(diff ~ group)
data2 %>%
select(-diff) %>%
tidyr::pivot_longer(left:right,
names_to = "group",
values_to = "diff") -> d3
t.test(diff ~ group, d3)
t.test(data2$diff, mu = 0)
file.edit("reviews/helpers.R")
file.edit("reviews/helpers.R")
require(dplyr)
tempmood <- read.csv("C:/Users/abaxter94/Box/TA PSC204A _ F2020/Final/tempmood.csv")
tempmood <- read.csv("tempmood.csv")
coef(lm(scale(temp) ~ scale(part1), data = tempmood))
coef(lm(scale(temp) ~ scale(part2), data = tempmood))
coef(lm(scale(temp) ~ scale(part3), data = tempmood))
coef(lm(scale(temp) ~ scale(part4), data = tempmood))
coef(lm(scale(temp) ~ scale(part1), data = tempmood))|>round(2)
coef(lm(scale(temp) ~ scale(part2), data = tempmood))|>round(2)
coef(lm(scale(temp) ~ scale(part3), data = tempmood))|>round(2)
coef(lm(scale(temp) ~ scale(part4), data = tempmood))|>round(2)
setwd("../GitHub/josue-rodriguez")
library(blogdown)
serve_site()
stop_server()
build_site()
install.packages('blogdown')
install.packages("blogdown")
install.packages('blogdown', dependencies = TRUE)
install.packages("blogdown", dependencies = TRUE)
install.packages('xfun')
install.packages("xfun")
install.packages("xfun")
install.packages('blogdown')
blogdown::serve_site()
blogdown::install_hugo()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::stop_server()
blogdown::build_site()
library(blogdown)
serve_site()
stop_server()
serve_site()
stop_server()
build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
